# Stolen from great work of Matthieu "Puckel_" Roisil on https://github.com/puckel/docker-airflow
version: '3'
services:

    redis:
        image: 'redis:3.2.7'
        # command: redis-server --requirepass redispass

    postgres:
        image: postgres:13
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        # Uncomment these lines to persist data on the local filesystem.
        #     - PGDATA=/var/lib/postgresql/data/pgdata
        # volumes:
        #     - ./pgdata:/var/lib/postgresql/data/pgdata

    airflow_webserver:
        build:
            context: .
            dockerfile: ./backend/Dockerfile
        restart: always
        volumes:
          - ./airflow/dags:/workspace/airflow/dags:r
          - ./airflow/airflow.cfg:/workspace/airflow/airflow.cfg:r
        depends_on:
            - postgres
            - redis
        environment:
            - AIRFLOW_HOME=/workspace/airflow
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=example
            # - REDIS_PASSWORD=redispass
        ports:
            - "8080:8080"
        command: bash -c "airflow db init && airflow users create --password test --username admin --firstname Peter --lastname Parker --role Admin --email spiderman@superhero.org && airflow webserver"

    flower:
        build:
            context: .
            dockerfile: ./backend/Dockerfile
        restart: always
        depends_on:
            - redis
            - postgres
            - worker_a
            - worker_b
        volumes:
          - ./airflow/dags:/workspace/airflow/dags
          - ./airflow/airflow.cfg:/workspace/airflow/airflow.cfg:r
        environment:
            - AIRFLOW_HOME=/workspace/airflow
        ports:
            - "5555:5555"
        command: bash -c "airflow celery flower"

    scheduler:
        build:
            context: .
            dockerfile: ./backend/Dockerfile
        restart: always
        depends_on:
            - airflow_webserver
            - flower
        volumes:
          - ./airflow/dags:/workspace/airflow/dags
          - ./airflow/airflow.cfg:/workspace/airflow/airflow.cfg:r
        environment:
            - AIRFLOW_HOME=/workspace/airflow
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=example
        command: bash -c "airflow scheduler"

    worker_a:
        build:
            context: .
            dockerfile: ./backend/Dockerfile
        restart: always
        depends_on:
            - mongo
        volumes:
          - ./airflow/dags:/workspace/airflow/dags
          - ./airflow/airflow.cfg:/workspace/airflow/airflow.cfg:r
        environment:
            - AIRFLOW_HOME=/workspace/airflow
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=example
        command: bash -c "airflow celery worker"

    worker_b:
        build:
            context: .
            dockerfile: ./backend/Dockerfile
        restart: always
        depends_on:
            - mongo
        volumes:
          - ./airflow/dags:/workspace/airflow/dags
          - ./airflow/airflow.cfg:/workspace/airflow/airflow.cfg:r
        environment:
            - AIRFLOW_HOME=/workspace/airflow
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=example
        command: bash -c "airflow celery worker"

    mongo:
        image: mongo
        restart: always
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=example
        ports:
            - 27017:27017

    mongo-express:
        image: mongo-express
        restart: always
        ports:
            - 8081:8081
        depends_on:
            - mongo
        environment:
            - VCAP_APP_HOST=0.0.0.0
            - ME_CONFIG_MONGODB_URL=mongodb://root:example@mongo:27017/db?ssl=false
            - ME_CONFIG_MONGODB_ADMINUSERNAME=root
            - ME_CONFIG_MONGODB_ADMINPASSWORD=example

    api:
        build:
            context: ./
            dockerfile: ./api/Dockerfile
        command: python -m uvicorn api.application:app --reload --host 0.0.0.0
        depends_on:
            - mongo
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=example
        ports:
            - "8000:8000"
